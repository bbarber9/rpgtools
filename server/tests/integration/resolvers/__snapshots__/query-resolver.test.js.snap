// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`query resolver no current user 1`] = `
Object {
  "data": Object {
    "currentUser": Object {
      "_id": Any<String>,
      "currentWorld": null,
      "email": null,
      "permissions": Array [],
      "username": "Anonymous",
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`query resolver users 1`] = `
Object {
  "data": Object {
    "users": Object {
      "docs": ArrayContaining [
        ObjectContaining {
          "_id": Any<String>,
        },
      ],
      "page": 1,
      "totalPages": 1,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`query resolver with authenticated user current user 1`] = `
Object {
  "data": Object {
    "currentUser": Object {
      "_id": Any<String>,
      "currentWorld": null,
      "email": null,
      "permissions": Array [],
      "username": "tester",
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`query resolver with authenticated user with existing world wiki 1`] = `
Object {
  "data": Object {
    "wiki": Object {
      "_id": Any<String>,
      "canWrite": true,
      "content": null,
      "coverImage": null,
      "mapImage": null,
      "name": "Earth",
      "type": "Place",
      "usersWithPermissions": Array [],
      "world": Object {
        "_id": Any<String>,
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`query resolver with authenticated user with existing world world 1`] = `
Object {
  "data": Object {
    "world": Object {
      "_id": Any<String>,
      "canAddRoles": true,
      "canWrite": true,
      "folders": ArrayContaining [
        ObjectContaining {
          "_id": Any<String>,
          "children": ArrayContaining [
            ObjectContaining {
              "_id": Any<String>,
            },
          ],
          "pages": Array [],
        },
        ObjectContaining {
          "_id": Any<String>,
          "children": Array [],
          "pages": ArrayContaining [
            ObjectContaining {
              "_id": Any<String>,
            },
          ],
        },
      ],
      "name": "Earth",
      "pins": Array [],
      "roles": ArrayContaining [
        ObjectContaining {
          "_id": Any<String>,
          "members": ArrayContaining [
            ObjectContaining {
              "_id": Any<String>,
            },
          ],
          "permissions": ArrayContaining [
            ObjectContaining {
              "_id": Any<String>,
              "subject": ObjectContaining {
                "_id": Any<String>,
              },
            },
          ],
        },
      ],
      "rootFolder": Object {
        "_id": Any<String>,
        "canWrite": true,
        "children": ArrayContaining [
          ObjectContaining {
            "_id": Any<String>,
          },
        ],
        "name": "Earth",
        "pages": Array [],
      },
      "usersWithPermissions": Array [],
      "wikiPage": Object {
        "_id": Any<String>,
        "name": "Earth",
      },
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`query resolver with authenticated user with existing world worlds with one private and one public world 1`] = `
Object {
  "data": Object {
    "worlds": Object {
      "docs": ArrayContaining [
        ObjectContaining {
          "_id": Any<String>,
          "wikiPage": ObjectContaining {
            "_id": Any<String>,
          },
        },
      ],
      "totalPages": 1,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`query resolver with existing world wiki no permission 1`] = `
Object {
  "data": Object {
    "wiki": null,
  },
  "errors": Array [
    Object {
      "extensions": Object {
        "code": "INTERNAL_SERVER_ERROR",
      },
      "locations": Array [
        Object {
          "column": 3,
          "line": 2,
        },
      ],
      "message": Any<String>,
      "path": Array [
        "wiki",
      ],
    },
  ],
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`query resolver with existing world world 1`] = `
Object {
  "data": Object {
    "world": null,
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;

exports[`query resolver with existing world worlds with one private and one public world 1`] = `
Object {
  "data": Object {
    "worlds": Object {
      "docs": ArrayContaining [
        ObjectContaining {
          "_id": Any<String>,
          "wikiPage": ObjectContaining {
            "_id": Any<String>,
          },
        },
      ],
      "totalPages": 1,
    },
  },
  "errors": undefined,
  "extensions": undefined,
  "http": Object {
    "headers": Headers {
      Symbol(map): Object {},
    },
  },
}
`;
